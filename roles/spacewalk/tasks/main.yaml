---
- name: Check service firewalld
  command: systemctl status firewalld
  register: firewalld
  ignore_errors: True

- name: Enable http and https in firewalld
  shell: |
    firewall-cmd --list-service | grep {{ item }} ||
    ( firewall-cmd --add-service={{ item }} &&
      firewall-cmd --add-service={{ item }} --permanent )
  with_items:
    - http
    - https
  when: firewalld.rc == 0

- name: Check if Docker runs
  shell:
    service docker status
  tags:
    - always

### Postgresql issue ###
- name: Run postgresql in Docker
  shell: |
    docker ps | grep "{{ db_host }}" ||
    docker run -d --name "{{ db_host }}" -h "{{ db_host }}" -p 5432:5432 -e POSTGRES_PASSWORD="{{ db_pass }}" postgres:9.6

- name: Install pctl 9.6 to postgresql
  shell:
    docker exec {{ db_host }} /bin/bash -c "apt update && apt install postgresql-pltcl-9.6 -y"

- name: Copy files to remote systems to build image for Docker
  copy: src={{ item }} dest=/root/{{ item }}
  with_items:
    - Dockerfile
    - jpackage-generic.repo
    - answer.txt
    - bin
    - bin/docker-spacewalk-setup.sh
    - bin/docker-spacewalk-run.sh
  tags:
    - build

- name: Prepare storage
  shell: |
    mkdir -p {{ item }}
    chcon -Rt svirt_sandbox_file_t {{ item }}
    restorecon -rv  {{ item }}
  with_items:
    - /var/satellite
    - /var/www/html

- name: Build Docker image with spacewalk
  command:
    docker build -t {{ docker_image }} .
  when: docker_image == "spacewalk"
  tags:
    - build

- name: Download spacewalk image from Docker hub
  command:
    docker pull {{ docker_image }}
  when: docker_image == "pajinek/docker-spacewalk"

- name: Delete old instance of Spacewalk
  shell: |
     ! docker inspect {{ spacewalk_host }} || docker rm -f {{ spacewalk_host }}

- name: Install spacewalk from docker image
  shell: |
    docker run -d --name {{ spacewalk_host }} -h {{ spacewalk_host }} \
           --link {{ db_host }}:{{ db_host }} -p 80:80 -p 443:443 -p 69:69 -p 5222:5222 \
           -e POSTGRES_PASSWORD={{ db_pass }} \
           -v /var/satellite/:/var/satellite/:Z \
           {{ docker_image }}

- name: Check if installation finished done
  shell: |
    watchdog=30
    while ! docker logs {{ spacewalk_host }} 2> /dev/null | grep "^Installation complete.$"; do
      watchdog=$(( $watchdog - 1 ))
      sleep 10 && [ $watchdog -eq 0 ] && break
    done

- name: Check docker logs
  shell:
    docker logs {{ spacewalk_host }}
  register: dockerlog

- name: Check ports
  shell:
    nmap $( hostname )
  register: nmap

- debug: var=nmap.stdout_lines

- name: Load first page
  shell: |
    URL=https://$( hostname )/rhn/newlogin/CreateFirstUser.do
    curl --silent $URL --insecure -D /dev/stdout -o /dev/null
    watchdog=30
    while true; do
        EC=$( curl -o /dev/null --insecure --silent --head --write-out '%{http_code}' "$URL" )
        ([ "$EC" -eq 200 ] || [ $watchdog -eq 0 ]) && break
        echo "http code: $EC"
        sleep 3 && watchdog=$(( $watchdog - 1 ))
    done
  register: curl
  tags:
    - curl

- debug: var=curl.stdout_lines

