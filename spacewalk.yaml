---
- hosts: all
  remote_user: root
  ###gather_facts: no
  vars:
    db_host: "spacewalk-postgresql.docker"
    db_pass: "root_pass"
    spacewalk_host: "spacewalk.docker" 
   # docker_image: "spacewalk"
    docker_image: "pajinek/docker-spacewalk"
  tasks:
    - name: Install docker on system
      shell: |
        dnf install -y docker libselinux-python
        systemctl start docker
      tags:
        - prepare

    - name: Check if Docker runs
      shell:
        service docker status
      tags:
        - always

    ### Postgresql issue ###
    - name: Run postgresql in Docker
      shell: |
        docker ps | grep "{{ db_host }}" ||
        docker run -d --name "{{ db_host }}" -h "{{ db_host }}" -p 5432:5432 -e POSTGRES_PASSWORD="{{ db_pass }}" postgres:9.6

    - name: Install pctl 9.6 to postgresql
      shell:
        docker exec {{ db_host }} /bin/bash -c "apt update && apt install postgresql-pltcl-9.6 -y"

    - name: Copy files to remote systems to build image for Docker
      copy: src={{ item }} dest=/root/{{ item }}
      with_items:
        - Dockerfile
        - jpackage-generic.repo
        - answer.txt
        - bin
        - bin/docker-spacewalk-setup.sh
        - bin/docker-spacewalk-run.sh
      tags:
        - build

    - name: Prepare storage
      shell: |
        chcon -Rt svirt_sandbox_file_t /var/satellite
        restorecon -rv  /var/satellite

    - name: Build Docker image with spacewalk
      command:
        docker build -t {{ docker_image }} .
      tags:
        - build

    - name: Delete old instance of Spacewalk
      shell: |
         ! docker inspect {{ spacewalk_host }} || docker rm -f {{ spacewalk_host }}

    - name: Install spacewalk from nigthly build
      command:
        docker run -d --name "{{ spacewalk_host }}" -h "{{ spacewalk_host }}" --link "{{ db_host }}:{{ db_host }}" -p 80:80 -p 443:443 -e POSTGRES_PASSWORD="{{ db_pass }}" -v /var/satellite/:/var/satellite/:Z {{ docker_image }}

    - name: Check if installation finished done
      shell: |
        watchdog=10
        while ! docker logs {{ spacewalk_host }} 2> /dev/null | grep "Installation complete"; do
          watchdog=$(( $watchdog - 1 ))
          sleep 10 && [[ $watchdog == 0 ]] && break
          echo "."
        done

...

